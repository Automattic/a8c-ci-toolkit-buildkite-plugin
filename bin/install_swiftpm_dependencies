#!/bin/bash -eu

WORKSPACE_PACKAGE_RESOLVED_PATH=(*.xcworkspace/xcshareddata/swiftpm/Package.resolved)
ROOT_PACKAGE_RESOLVED_PATH=Package.resolved

# Find where Package.resolved is located
if  [[ -f $WORKSPACE_PACKAGE_RESOLVED_PATH ]]; then
	BUILD_TYPE="XCODEBUILD"
	PACKAGE_RESOLVED_LOCATION=$WORKSPACE_PACKAGE_RESOLVED_PATH
	echo "The project is an Xcode project"
elif  [[ -f $ROOT_PACKAGE_RESOLVED_PATH ]]; then
	BUILD_TYPE="SWIFT"
	PACKAGE_RESOLVED_LOCATION=$ROOT_PACKAGE_RESOLVED_PATH
	echo "The project is a Swift project"
else
	echo "Unable to find Package.resolved"
fi

PACKAGE_RESOLVED_HASH=$(hash_file "$PACKAGE_RESOLVED_LOCATION")
CACHE_KEY="$BUILDKITE_PIPELINE_SLUG-spm-cache-$PACKAGE_RESOLVED_HASH"

# Restore SPM cache if it's available
mkdir -p ~/spm
cd ~/spm
restore_cache "$CACHE_KEY"
cd -

sudo defaults write com.apple.dt.Xcode IDEPackageSupportUseBuiltinSCM YES

# Trust all GitHub.com and BitBucket.org keys â€“ this allows checking out dependencies via SSH
add_host_to_ssh_known_hosts bitbucket.org
add_host_to_ssh_known_hosts github.com

if [[ "$BUILD_TYPE" == "XCODEBUILD" ]]; then
	echo "Resolving packages with \`xcodebuild\`"
	xcodebuild \
	-resolvePackageDependencies \
	-clonedSourcePackagesDirPath ~/spm
elif [[ "$BUILD_TYPE" == "SWIFT" ]]; then
	echo "Resolving packages with \`swift\`"
	swift package resolve \
	--cache-path ~/spm \
	--verbose
else 
	echo "BUILD_TYPE is not set correctly"
fi


# If this is the first time we've seen this particular cache key, save it for the future
save_cache ~/spm "$CACHE_KEY"
