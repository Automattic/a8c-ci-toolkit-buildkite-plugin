#!/bin/bash -eu

# This script is used to delete comments on a pull request, and must be run in a buldkite PR step.
#
# Example:
#   delete_pr_comment --github-token <token> --containing "part of a comment"

# Check dependencies and print their versions for diagnosis purposes
cat <<EOF
> jq --version
$(jq --version)

> curl --version
$(curl --version)

EOF

# Parse command line arguments
while [[ "$#" -gt 0 ]]; do
    case $1 in
        --containing) COMMENT_CONTAINING="$2"; shift ;;
        --github-token) GITHUB_TOKEN="$2"; shift ;;
        *) echo "Unknown option: $1"; exit 1 ;;
    esac
    shift
done

function require_option() {
    if [[ -z "$2" ]]; then
        echo "Error: $1 is required"
        exit 1
    fi
}

require_option '--containing' "$COMMENT_CONTAINING"
require_option '--github-token' "$GITHUB_TOKEN"

GITHUB_URL="${BUILDKITE_PULL_REQUEST_REPO%.git}"
GITHUB_USER=$(basename "$(dirname "$GITHUB_URL")")
GITHUB_REPO=$(basename "$GITHUB_URL")

COMMENT_IDS="$(curl -s \
    -H "Authorization: token ${GITHUB_TOKEN}" \
    -H "Accept: application/vnd.github+json" \
    "https://api.github.com/repos/${GITHUB_USER}/${GITHUB_REPO}/issues/${BUILDKITE_PULL_REQUEST}/comments" \
    | jq ".[] | select(.body | contains(\"$COMMENT_CONTAINING\")) | .id")"

while IFS= read -r comment_id || [[ -n $comment_id ]]; do
    echo "Delete the comment containing $COMMENT_CONTAINING: $comment_id"
    curl -s --fail-with-body -X DELETE \
        -H "Authorization: token ${GITHUB_TOKEN}" \
        -H "Accept: application/vnd.github+json" \
        "https://api.github.com/repos/${GITHUB_USER}/${GITHUB_REPO}/issues/comments/$comment_id"
done < <(printf '%s' "$COMMENT_IDS")
