#!/usr/bin/env ruby
#
# Usage:
#   annotate-test-failures [junit-file-path]
#
require 'rexml/document'

junit_path = ARGV.first || File.join('build', 'results', 'report.junit')
title = ENV.fetch('BUILDKITE_LABEL', 'Tests')

unless File.exist?(junit_path)
  puts "JUnit file not found: #{junit_path}."
  exit 0
end

file = File.open(junit_path)
xmldoc = REXML::Document.new(file)

failures = []
REXML::XPath.each(xmldoc, '//testcase[failure]') do |testcase|
  failure = testcase.elements['failure']
  failures.append <<~ENTRY
  <details><summary><tt>#{testcase['name']}</tt> in <tt>#{testcase['classname']}</tt></summary>
  
  #{failure['message']}

  ```
  #{failure.text}
  ```
  </details>
  ENTRY
end

puts "Reporting #{failures.count} failure(s) using `buildkite-agent annotate`"
markdown = "\#\#\#\# #{title}: #{failures.length} failure(s)\n\n" + failures.join("\n")
system('buildkite-agent', 'annotate', markdown, '--style', 'error', '--context', title)

exit $?.exitstatus
