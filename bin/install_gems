#!/bin/bash -eu

dump_ruby_env_info "before running $(basename "$0")"

ARCHITECTURE=$(uname -m)
RUBY_VERSION=$(cat .ruby-version)
GEMFILE_HASH=$(hash_file Gemfile.lock)
CACHEKEY="$BUILDKITE_PIPELINE_SLUG-$ARCHITECTURE-ruby$RUBY_VERSION-$GEMFILE_HASH"

restore_cache "$CACHEKEY"

# Install the same Bundler version as the one in the Gemfile.lock.
# This should prevent runtime issues where Ruby "gets confused" on which Bundler version to use.
# See https://github.com/Automattic/bash-cache-buildkite-plugin/issues/16 for more details.
GEMFILE_LOCK_BUNDLER_VERSION=$(sed -n -e '/BUNDLED WITH/{n;s/ *//p;}' Gemfile.lock)
# The command will fail if the `--version` parameter is empty; we can omit checking for that ourselves.
gem install bundler --version "$GEMFILE_LOCK_BUNDLER_VERSION"

dump_ruby_env_info "after running gem install bundler version $GEMFILE_LOCK_BUNDLER_VERSION"

bundle install

# If this is the first time we've seen this particular cache key, save it for the future
save_cache vendor/bundle "$CACHEKEY"
